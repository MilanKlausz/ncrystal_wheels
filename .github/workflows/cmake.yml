name: CMake

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.9' ]
    name: Ubuntu with Python ${{ matrix.python-version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        path: src

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check versions
      run: |
           which python3
           python3 --version
           which cmake
           cmake --version

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake
        -S ${{github.workspace}}/src
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

    - name: Build
      run: >
        cmake
        --build ${{github.workspace}}/build
        --config ${{env.BUILD_TYPE}}

    - name: Install
      run: cmake --install ${{github.workspace}}/build

    - name: Look around
      run: ls -l ${{github.workspace}}

    - name: Tests without environment setup
      run: |
           ${{github.workspace}}/install/bin/ncrystal-config --summary
           ${{github.workspace}}/install/bin/ncrystal_inspectfile --test
           ${{github.workspace}}/install/bin/ncrystal_example_c
           ${{github.workspace}}/install/bin/ncrystal_example_cpp
           ${{github.workspace}}/install/bin/ncrystal_inspectfile --dump 'Al_sg225.ncmat;dcutoff=1.5'

    - name: Tests with eval ncrystal-config setup
      run: |
           eval $(${{github.workspace}}/install/bin/ncrystal-config --setup)
           ncrystal-config --summary
           ncrystal_inspectfile --test
           ncrystal-config --help
           ncrystal_example_c
           ncrystal_example_cpp
           ncrystal_example_py
           ncrystal_inspectfile --help
           ncrystal_inspectfile --dump 'Al_sg225.ncmat;dcutoff=1.5'
           ncrystal_inspectfile --dump 'Al_sg225.nxs;dcutoff=1.5'
           python3 -c 'import NCrystal; NCrystal.test()'
           ncrystal_vdos2ncmat --help
           ncrystal_onlinedb2ncmat --help
           ncrystal_ncmat2cpp --help
           ncrystal_verifyatompos --help
           ncrystal_onlinedb2ncmat --codid=9008460
           ncrystal_ncmat2cpp $(ncrystal-config --show=datadir)/Al_sg225.ncmat -o test.cpp
           cat test.cpp
           eval $(ncrystal-config --unsetup)
           #NEEDS MATPLOTLIB: ncrystal_inspectfile --pdf Al_sg225.ncmat

    - name: Tests with setup.sh
      run: |
           . ${{github.workspace}}/install/setup.sh
           ncrystal-config --summary
           ncrystal_inspectfile --test
           ncrystal_example_c
           ncrystal_example_cpp
           ncrystal_example_py
           python3 -c 'import NCrystal; NCrystal.test()'
           . ${{github.workspace}}/install/unsetup.sh

##requires pyne!    - python3 -c "import sys;sys.exit(1 if sys.version_info[0:2]>=(3,6) else 0)" || ../installdir/bin/ncrystal_endf2ncmat --help
#    - ../installdir/bin/ncrystal_ncmat2cpp --help
#    - ../installdir/bin/ncrystal_ncmat2cpp $(../installdir/bin/ncrystal-config --show=datadir)/Al_sg225.ncmat -o test.cpp
#    - cat test.cpp
#    - ../installdir/bin/ncrystal_verifyatompos --help
#    - ../installdir/bin/ncrystal_onlinedb2ncmat --help
#    - python3 -c 'import ase' 2>/dev/null || python3 -mpip install ase
#    - ../installdir/bin/ncrystal_verifyatompos Al2O3_sg167_Corundum.ncmat
#    - python3 -c 'import pymatgen' 2>/dev/null || python3 -mpip install pymatgen
#    - ../installdir/bin/ncrystal_onlinedb2ncmat --codid=9008460
#    - cat autogen_Al_sg225_cod9008460.ncmat
#    - set +e
#    - python3 -c 'import matplotlib' 2>/dev/null || python3 -mpip install matplotlib
#    - ../installdir/bin/ncrystal_inspectfile --pdf Al_sg225.ncmat
#    - . ../installdir/setup.sh
#    - ../installdir/bin/ncrystal_example_py
#    - python3 -c 'import NCrystal; NCrystal.test()'
#    - ../installdir/bin/ncrystal_inspectfile --help
#    - ../installdir/bin/ncrystal_inspectfile --test
#    - ../installdir/bin/ncrystal_inspectfile --dump Al_sg225.ncmat
#    - ../installdir/bin/ncrystal_inspectfile --pdf Al_sg225.ncmat
#    - . ../installdir/setup.sh
#    - ../installdir/bin/ncrystal_example_py
#    - python3 -c 'import NCrystal; NCrystal.test()'
##do not run vdos2ncmat/endf2ncmat with 3.5, (uses f-strings from py3.6):
#    - python3 --version
#    - python3 -c "import sys;sys.exit(1 if sys.version_info[0:2]>=(3,6) else 0)" || ../installdir/bin/ncrystal_vdos2ncmat --help
##requires pyne!    - python3 -c "import sys;sys.exit(1 if sys.version_info[0:2]>=(3,6) else 0)" || ../installdir/bin/ncrystal_endf2ncmat --help
#    - ../installdir/bin/ncrystal_ncmat2cpp --help
#    - ../installdir/bin/ncrystal_ncmat2cpp $(../installdir/bin/ncrystal-config --show=datadir)/Al_sg225.ncmat -o test.cpp
#    - cat test.cpp
#    - ../installdir/bin/ncrystal_verifyatompos --help
#    - ../installdir/bin/ncrystal_onlinedb2ncmat --help
#    - python3 -c 'import ase' 2>/dev/null || python3 -mpip install ase
#    - ../installdir/bin/ncrystal_verifyatompos Al2O3_sg167_Corundum.ncmat
#    - python3 -c 'import pymatgen' 2>/dev/null || python3 -mpip install pymatgen
#    - ../installdir/bin/ncrystal_onlinedb2ncmat --codid=9008460
#    - cat autogen_Al_sg225_cod9008460.ncmat
#    - set +e
#


