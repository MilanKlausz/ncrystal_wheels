################################################################################
##                                                                            ##
##  This file is part of NCrystal (see https://mctools.github.io/ncrystal/)   ##
##                                                                            ##
##  Copyright 2015-2020 NCrystal developers                                   ##
##                                                                            ##
##  Licensed under the Apache License, Version 2.0 (the "License");           ##
##  you may not use this file except in compliance with the License.          ##
##  You may obtain a copy of the License at                                   ##
##                                                                            ##
##      http://www.apache.org/licenses/LICENSE-2.0                            ##
##                                                                            ##
##  Unless required by applicable law or agreed to in writing, software       ##
##  distributed under the License is distributed on an "AS IS" BASIS,         ##
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  ##
##  See the License for the specific language governing permissions and       ##
##  limitations under the License.                                            ##
##                                                                            ##
################################################################################

##################################################################################
#                                                                                #
# Exports NCrystal targets, and provides a few PATHS and values of a few build   #
# options.                                        #                              #
#                                                                                #
# Geant4 targets will not be exported from this file. If Geant4 targets are      #
# needed, one should use find_package(G4NCrystal) instead of                     #
# find_package(NCrystal) (the former will also provide targets and variables     #
# from the latter).                                                              #
#                                                                                #
##################################################################################


#Export a few directory paths (relocatable):
set( NCrystal_CMAKEDIR "${CMAKE_CURRENT_LIST_DIR}" )
get_filename_component( NCrystal_DIR "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2ROOT@" ABSOLUTE )
get_filename_component( NCrystal_DATAROOT "${NCrystal_DIR}/@NCrystal_DATAROOT@" ABSOLUTE )

get_filename_component( NCrystal_BINDIR "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2BINDIR@" ABSOLUTE )
get_filename_component( NCrystal_LIBDIR "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2LIBDIR@" ABSOLUTE )
get_filename_component( NCrystal_INCDIR "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2INCDIR@" ABSOLUTE )
get_filename_component( NCrystal_PYPATH "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2PYPATH@" ABSOLUTE )#FIXME: Only if appropriate
get_filename_component( NCrystal_DATAFILESDIR "${NCrystal_CMAKEDIR}/@NCrystal_relpath_CMAKEDIR2DATAFILESDIR@" ABSOLUTE )#FIXME: Only if appropriate

#The NCrystal targets (not including the G4NCrystal targets!):
if(NOT TARGET NCrystal::NCrystal)
  include( "${NCrystal_CMAKEDIR}/NCrystalTargets.cmake" )
endif()

#Config variables:
set( NCrystal_OPTION_BUILD_EXAMPLES  @BUILD_EXAMPLES@ )
set( NCrystal_OPTION_BUILD_G4HOOKS   @BUILD_G4HOOKS@ )
set( NCrystal_OPTION_BUILD_EXTRA     @BUILD_EXTRA@ )
set( NCrystal_OPTION_INSTALL_MCSTAS  @INSTALL_MCSTAS@ )
set( NCrystal_OPTION_INSTALL_PY      @INSTALL_PY@ )
set( NCrystal_OPTION_INSTALL_DATA    @INSTALL_DATA@ )
set( NCrystal_OPTION_EMBED_DATA      @EMBED_DATA@ )
set( NCrystal_OPTION_INSTALL_SETUPSH @INSTALL_SETUPSH@ )
set( NCrystal_OPTION_MODIFY_RPATH    @MODIFY_RPATH@ )

#Libname:
set( NCrystal_LIBNAME @NCrystal_libname@ )

#Various scripts:
set( NCrystal_CMD_NCMAT2CPP ${NCrystal_BINDIR}/ncrystal_ncmat2cpp )
if ( NOT EXISTS NCrystal_NCMAT2CPP )
  set( NCrystal_NCMAT2CPP "")
endif()
set( NCrystal_CMD_NCRYSTALCONFIG ${NCrystal_BINDIR}/ncrystal-config )
if ( NOT EXISTS NCrystal_CMD_NCRYSTALCONFIG )
  set( NCrystal_CMD_NCRYSTALCONFIG "")
endif()
set( NCrystal_CMD_NCRYSTALINSPECTFILE ${NCrystal_BINDIR}/ncrystal_inspectfile )
if ( NOT EXISTS NCrystal_CMD_NCRYSTALINSPECTFILE )
  set( NCrystal_CMD_NCRYSTALINSPECTFILE "")
endif()
