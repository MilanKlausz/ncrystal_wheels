language: cpp

os:
  - linux
  - osx

osx_image: xcode9.2

env:
  global:
    - SHELL_SESSION_HISTORY=0
  matrix:
    - BUILD=Release
    - BUILD=Debug

addons:
  apt:
    packages:
      - cmake
      - cmake-data
      - python-numpy
      - python-matplotlib
      - python3-numpy
      - python3-matplotlib

compiler:
    - gcc
    - clang

before_install:
    - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB||true); fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||(sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||(sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;rvm get stable --auto-dotfiles; sleep 2)||true; fi


before_script:
    - set -e
    - cmake --version
    - which python
    - python --version
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update || true; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade || true; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python || true; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install python@2 || true; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link --force python@2 || true; fi
    - which python
    - python --version
    - which python2 || echo "python2 not found"
    - python2 --version
    - which python3 || echo "python3 not found"
    - python3 --version
    - python2 -c 'import numpy; print numpy.__version__' 2>/dev/null || python2 -mpip install --verbose  numpy
    - python3 -c 'import numpy; print (numpy.__version__)' 2>/dev/null || python3 -mpip install --verbose numpy
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then python3 -mpip install numpy --user; fi
    - python2 -c 'import numpy; print numpy.__version__'
    - python3 -c 'import numpy; print (numpy.__version__)'
    - ls -l
    - mkdir build installdir rundir
    - ls -l
    - cd build
    - ls -l
    - cmake .. -DCMAKE_BUILD_TYPE=${BUILD} -DCMAKE_INSTALL_PREFIX=../installdir/
    - ls -l
    - set +e

script:
    - set -e
    - make VERBOSE=1 install
    - cd ../rundir
    - ls -l
    - find ../installdir
    - ../installdir/bin/ncrystal_example_c
    - ../installdir/bin/ncrystal_example_cpp
    - python2 ../installdir/bin/ncrystal_inspectfile --test
    - python3 ../installdir/bin/ncrystal_inspectfile --test
    - mkdir fakebin && touch fakebin/python && chmod +x fakebin/python
    - export PATH="$PWD/fakebin:$PATH"
    - echo 'python2 "$@"' > fakebin/python && python --version
    - ../installdir/bin/ncrystal_inspectfile --help
    - ../installdir/bin/ncrystal_inspectfile --test
    - ../installdir/bin/ncrystal_inspectfile --dump Al_sg225.ncmat
    - python2 -c 'import matplotlib' 2>/dev/null || python2 -mpip install matplotlib
    - ../installdir/bin/ncrystal_inspectfile --pdf Al_sg225.ncmat
    - . ../installdir/setup.sh
    - ../installdir/bin/ncrystal_example_py
    - python -c 'import NCrystal; NCrystal.test()'
    - echo 'python3 "$@"' > fakebin/python && python --version
    - ../installdir/bin/ncrystal_inspectfile --help
    - ../installdir/bin/ncrystal_inspectfile --test
    - ../installdir/bin/ncrystal_inspectfile --dump Al_sg225.ncmat
    - python3 -c 'import matplotlib' 2>/dev/null || python3 -mpip install matplotlib
    - ../installdir/bin/ncrystal_inspectfile --pdf Al_sg225.ncmat
    - . ../installdir/setup.sh
    - ../installdir/bin/ncrystal_example_py
    - python -c 'import NCrystal; NCrystal.test()'
    - set +e

notifications:
  email:
    recipients:
      - ncrystal-developers@cern.ch
    on_success: change
    on_failure: always
